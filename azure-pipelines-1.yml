# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
variables:
  - group: polaris-Kyle
resources:
  repositories:
    - repository: AzureBoardsScript
      ref: master
      type: git
      name: Implementations
steps:
- checkout: self
- bash: |
    ls
    java -version
    mvn -version
    cd guava
    curl -fLsS -o bridge.zip $BRIDGECLI_LINUX64 && unzip -qo -d $(Agent.TempDirectory) bridge.zip && rm -f bridge.zip
    $(Agent.TempDirectory)/synopsys-bridge --verbose --stage polaris \
      polaris.assessment.types='SAST,SCA' \
      polaris.application.name='kyleh' \
      polaris.project.name='ADO-BashTest' \
      bridge_polaris_branch_name: '$(Build.SourceBranchName)'
- checkout: AzureBoardsScript

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: '$(Build.SourcesDirectory)/AzureBoardsScript/polaris_azure_ci.py'
    arguments: '--config "AzureBoardsScript/polaris-azure.conf" --polaris-application-name "kyleh" --polaris-project-name "ADO-BashTest" --polaris-branch-name $(Build.SourceBranchName) --polaris-severities-filter "''''critical'''',''''high'''',''''medium'''',''''low'''',''''info''''" --azure-project-name "PolarisTickets" --azure-iteration-path "iteration 2" --azure-area-path "area path test"'
- script: cat AzureBoardsScript/logs/synopsys-azure.log
  condition: always()